/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     rhoEnergyFoam;

startFrom       latestTime; //startTime;

startTime       0;

stopAt          endTime;

endTime         200;

deltaT          0.00000002;

writeControl    adjustableRunTime;

writeInterval   1; //1.0;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

adjustTimeStep  yes;

maxCo           0.5; 		//a CFL = 1 esplode

maxDeltaT       1.;

pressArtDiff    true; //activate artificial diffusion on pressure
convArtDiff     true; //activate artificial diffusion on pressure

ducLevelPress       0.00;
ducLevelConv        0.05;
epsilon             0.744;
minfty		    0.729;
kp                  0.25;
ku                  0.75;

functions
{
      forceCoeffs
      {
	type 			forceCoeffs;
 	libs 			("libforces.so");
 	patches 		(airfoil);
 	rho	 		rhoInf;
 	rhoInf 			1;
 	CofR 			( 0       0        0);
 	liftDir 		( 0       0.0534   0);
 	dragDir 		(-0.9986  0        0);
 	pitchAxis 		( 0       0        1);
 	magUInf 		0.8626;
 	lRef 			1; 
 	Aref 			1; 
 	writeControl 		timeStep;
 	writeInterval 		1;
      }   
 
  
      writeduc
      {
        type 			writeObjects;
        libs 			("libutilityFunctionObjects.so");
        objects 		("ducSensor");
        writeControl 		outputTime;
        writeInterval       	1;
      }  
 
      fieldAverage1
      { 
        type            	fieldAverage;
        libs 			("libfieldFunctionObjects.so");
        timeStart       	80;
        timeEnd         	200;
        writeControl   		outputTime;
        writeInterval   	1;

        fields
        (
            p
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }
            
        );
      }  


}

// ************************************************************************* //
